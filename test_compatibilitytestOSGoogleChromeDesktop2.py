# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCompatibilitytestOSGoogleChromeDesktop2():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_compatibilitytestOSGoogleChromeDesktop2(self):
    # Test name: Compatibility_test_OS_GoogleChrome_Desktop2
    # Step # | name | target | value
    # 1 | open | https://ramoncristian00.wixsite.com/website | 
    self.driver.get("https://ramoncristian00.wixsite.com/website")
    # 2 | setWindowSize | 1280x775 | 
    self.driver.set_window_size(1280, 775)
    # 3 | click | id=DrpDwnMn00label | 
    self.driver.find_element(By.ID, "DrpDwnMn00label").click()
    # 4 | selectFrame | index=1 | 
    self.driver.switch_to.frame(1)
    # 5 | click | css=.gm-fullscreen-control | 
    self.driver.find_element(By.CSS_SELECTOR, ".gm-fullscreen-control").click()
    # 6 | mouseDownAt | css=div:nth-child(3) > div:nth-child(3) > img | 7.5,43
    element = self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(3) > div:nth-child(3) > img")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 7 | mouseMoveAt | css=div:nth-child(3) > div:nth-child(3) > img | 7.5,43
    element = self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(3) > div:nth-child(3) > img")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | mouseUpAt | css=div:nth-child(3) > div:nth-child(3) > img | 7.5,43
    element = self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(3) > div:nth-child(3) > img")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 9 | click | css=.gm-style | 
    self.driver.find_element(By.CSS_SELECTOR, ".gm-style").click()
    # 10 | click | id=minimized-chat | 
    self.driver.find_element(By.ID, "minimized-chat").click()
    # 11 | click | css=.\_3nFws | 
    self.driver.find_element(By.CSS_SELECTOR, ".\\_3nFws").click()
    # 12 | type | css=.\_3nFws | hhh
    self.driver.find_element(By.CSS_SELECTOR, ".\\_3nFws").send_keys("hhh")
    # 13 | click | css=.S66IV path | 
    self.driver.find_element(By.CSS_SELECTOR, ".S66IV path").click()
    # 14 | mouseOver | css=.S66IV path | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".S66IV path")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 15 | click | css=.Toy\+3 > svg | 
    self.driver.find_element(By.CSS_SELECTOR, ".Toy\\+3 > svg").click()
  
