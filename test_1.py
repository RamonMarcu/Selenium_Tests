# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCompatibilitytestOSGoogleChromeDesktop():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_compatibilitytestOSGoogleChromeDesktop(self):
    # Test name: Compatibility_test_OS_GoogleChrome_Desktop
    # Step # | name | target | value
    # 1 | open | https://ramoncristian00.wixsite.com/website | 
    self.driver.get("https://ramoncristian00.wixsite.com/website")
    # 2 | setWindowSize | 2560x1080 | 
    self.driver.set_window_size(2560, 1080)
    # 3 | click | id=DrpDwnMn00label | 
    self.driver.find_element(By.ID, "DrpDwnMn00label").click()
    # 4 | click | css=#hz9p881d .M3I7Z2 | 
    self.driver.find_element(By.CSS_SELECTOR, "#hz9p881d .M3I7Z2").click()
    # 5 | mouseOver | linkText=BOOK NOW | 
    element = self.driver.find_element(By.LINK_TEXT, "BOOK NOW")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 6 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 7 | click | id=DrpDwnMn00label | 
    self.driver.find_element(By.ID, "DrpDwnMn00label").click()
    # 8 | selectFrame | index=1 | 
    self.driver.switch_to.frame(1)
    # 9 | click | css=.gm-fullscreen-control | 
    self.driver.find_element(By.CSS_SELECTOR, ".gm-fullscreen-control").click()
    # 10 | mouseOver | css=.gm-fullscreen-control | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".gm-fullscreen-control")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 11 | mouseDownAt | css=.gm-svpc | 27,26
    element = self.driver.find_element(By.CSS_SELECTOR, ".gm-svpc")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 12 | mouseMoveAt | css=div:nth-child(3) > div:nth-child(3) > img | 21.5,13
    element = self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(3) > div:nth-child(3) > img")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 13 | mouseUpAt | css=div:nth-child(3) > div:nth-child(3) > img | 21.5,13
    element = self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(3) > div:nth-child(3) > img")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 14 | click | css=.gm-style | 
    self.driver.find_element(By.CSS_SELECTOR, ".gm-style").click()
    # 15 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 16 | click | css=#img_comp-k7o6p0am > img | 
    self.vars["window_handles"] = self.driver.window_handles
    # 17 | storeWindowHandle | root | 
    self.driver.find_element(By.CSS_SELECTOR, "#img_comp-k7o6p0am > img").click()
    # 18 | selectWindow | handle=${win9578} | 
    self.vars["win9578"] = self.wait_for_window(2000)
    # 19 | selectWindow | handle=${root} | 
    self.vars["root"] = self.driver.current_window_handle
    # 20 | click | id=DrpDwnMn01label | 
    self.driver.switch_to.window(self.vars["win9578"])
    # 21 | runScript | window.scrollTo(0,96) | 
    self.driver.switch_to.window(self.vars["root"])
    # 22 | click | css=.E6d271:nth-child(3) .Dn9jVh | 
    self.driver.find_element(By.ID, "DrpDwnMn01label").click()
    # 23 | click | css=.YRSSGK > path | 
    self.driver.execute_script("window.scrollTo(0,96)")
    # 24 | click | id=DrpDwnMn02label | 
    self.driver.find_element(By.CSS_SELECTOR, ".E6d271:nth-child(3) .Dn9jVh").click()
    # 25 | click | id=DrpDwnMn03label | 
    self.driver.find_element(By.CSS_SELECTOR, ".YRSSGK > path").click()
    # 26 | click | id=DrpDwnMn04label | 
    self.driver.find_element(By.ID, "DrpDwnMn02label").click()
    # 27 | click | id=DrpDwnMn05label | 
    self.driver.find_element(By.ID, "DrpDwnMn03label").click()
    # 28 | click | css=#img_1_comp-k7exbbmz > img | 
    self.driver.find_element(By.ID, "DrpDwnMn04label").click()
    # 29 | selectWindow | handle=${win8326} | 
    self.driver.find_element(By.ID, "DrpDwnMn05label").click()
    # 30 | selectWindow | handle=${root} | 
    self.vars["window_handles"] = self.driver.window_handles
    # 31 | selectWindow | handle=${win8326} | 
    self.driver.find_element(By.CSS_SELECTOR, "#img_1_comp-k7exbbmz > img").click()
    # 32 | close |  | 
    self.vars["win8326"] = self.wait_for_window(2000)
    # 33 | selectWindow | handle=${root} | 
    self.driver.switch_to.window(self.vars["win8326"])
    self.driver.switch_to.window(self.vars["root"])
    self.driver.switch_to.window(self.vars["win8326"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
  
